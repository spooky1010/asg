# This is a basic workflow to help you get started with Actions

name: test bat
on:
  push:
    branches: [ "main" ]
  workflow_dispatch:
           

jobs:
  build:
    runs-on: windows-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3


      - name:  Configure CodeSignTool
        run: |
          echo 'SIGN_TOOL_PATH=".\sign.bat"' >> .env
          $URL="https://www.ssl.com/download/codesigntool-for-windows/"
          $PATH="CodeSignTool-windows.zip"
          Invoke-WebRequest -URI $URL -OutFile $PATH
          Expand-Archive -Force $PATH -DestinationPath "${{ github.workspace }}"
          ls
          echo ---------------------------
          .\CodeSignTool.bat --version
          echo ---------------------------

      - name: start bat
        run: |
          $env:ES_CREDENTIAL_ID="${{ secrets.ES_CREDENTIAL_ID }}"
          $env:ES_USERNAME="${{ secrets.ES_USERNAME }}"
          $env:ES_PASSWORD="${{ secrets.ES_PASSWORD }}"


        
          $env:test="${{ secrets.TEST }}"
          echo "Env: $env:test"


          echo '.\CodeSignTool.bat credential_info -credential_id=%ES_CREDENTIAL_ID% -username=%ES_USERNAME% -password="%ES_PASSWORD%"' >> "sign.bat"
          echo 'echo "--------------"' >> "sign.bat"
          echo '& .\CodeSignTool.bat credential_info -credential_id=%ES_CREDENTIAL_ID% -username=%ES_USERNAME% -password="%ES_PASSWORD%"' >> "sign.bat"
          echo -----------
          Get-Content -Path .\sign.bat
          echo -----------
          .\sign.bat
          echo -----------
          #.\CodeSignTool.bat credential_info -credential_id="$env:ES_CREDENTIAL_ID" -username="$env:ES_USERNAME" -password="$env:ES_PASSWORD"
          echo -----------
          #.\CodeSignTool.bat credential_info -credential_id=${{ secrets.ES_CREDENTIAL_ID }} -username=${{ secrets.ES_USERNAME }} -password="${{ secrets.ES_PASSWORD }}"

      - name: start bat
        id: name
        run: |
          $name="test.bat"
          echo "artifact_state=$name" >> $env:GITHUB_OUTPUT
          #echo "::set-output name=artifact::${name}"
          echo ---------
          echo "${{ step.name.outputs.artifact_state }}"
          

      - name: Archive signed artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.name.outputs.artifact_state }}
          path: ${{ steps.name.outputs.artifact_state }}
          
